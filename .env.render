# Production Environment Configuration for Render
# Use Render's internal PostgreSQL service (eliminates external database connectivity issues)

# Render PostgreSQL Database (will be provided by Render after database creation)
# Format: postgresql://username:password@hostname:port/database
DATABASE_URL="postgresql://creatives_user:YOUR_DB_PASSWORD@dpg-XXXX-a.oregon-postgres.render.com/creatives_saas_prod"
DIRECT_URL="postgresql://creatives_user:YOUR_DB_PASSWORD@dpg-XXXX-a.oregon-postgres.render.com/creatives_saas_prod"

# Keep Supabase config for file storage only (since storage works fine)
SUPABASE_URL="https://zhklwleqemtaykmokxoy.supabase.co"
SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inpoa2x3bGVxZW10YXlrbW9reG95Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzU4Nzg5MDIsImV4cCI6MjA1MTQ1NDkwMn0.5QKZsnuXr9KPJxqO2YNmMHhYZiE7s2BKGF3DUIb3s0w"

# Production URLs (will be updated after deployment)
FRONTEND_URL="https://creatives-saas-frontend.vercel.app"
NEXT_PUBLIC_API_URL="https://creatives-saas-backend.onrender.com/api/v1"
NEXT_PUBLIC_FRONTEND_URL="https://creatives-saas-frontend.vercel.app"
NEXT_PUBLIC_SUPABASE_URL="https://zhklwleqemtaykmokxoy.supabase.co"
NEXT_PUBLIC_SUPABASE_ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inpoa2x3bGVxZW10YXlrbW9reG95Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzU4Nzg5MDIsImV4cCI6MjA1MTQ1NDkwMn0.5QKZsnuXr9KPJxqO2YNmMHhYZiE7s2BKGF3DUIb3s0w"
NEXT_PUBLIC_API_BYPASS_AUTH="false"

# Production Settings
NODE_ENV="production"

# Instructions:
# 1. Create PostgreSQL database in Render dashboard
# 2. Update DATABASE_URL and DIRECT_URL with actual connection details
# 3. Import database_export.sql to the new database
# 4. Deploy backend service with these environment variables
